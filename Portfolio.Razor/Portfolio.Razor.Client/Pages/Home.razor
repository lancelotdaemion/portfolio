@page "/"

@using Microsoft.AspNetCore.SignalR.Client
@using Portfolio.Blazor
@using MudBlazor
@using System.Collections.ObjectModel
@using System.Net.Http
@using System.Net.Http.Json

<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
<link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

<script src="_content/MudBlazor/MudBlazor.min.js"></script>

<PageTitle>Home</PageTitle>

@* Required *@
<MudThemeProvider />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudDataGrid Items="@_ipsums" RowStyleFunc="RowStyleFunc">
    <Columns>
        <PropertyColumn Property="x => x.Name" Title="Name" />
        <PropertyColumn Property="x => x.Value" Title="Value" />
        <PropertyColumn Property="x => x.PercentageChange" Title="Percentage Changed" />
    </Columns>
</MudDataGrid>

@code {
    private HubConnection _hubConnection;
    private ObservableCollection<LoremIpsum> _ipsums;

    protected override async Task OnInitializedAsync()
    {
        using (var httpClient = new HttpClient())
        {
            var client = new HttpClient();

            using (var response = await client.GetAsync("https://localhost:7055/api/Ipsums"))
            {
                _ipsums = await response.Content.ReadFromJsonAsync<ObservableCollection<LoremIpsum>>();
            }
        }

        

        _hubConnection = new HubConnectionBuilder()
                                .WithUrl("https://localhost:7055/lorem_ipsum_notifications")
                                .Build();

        _hubConnection.On<LoremIpsum>("ReceivedNotification", ipsum =>
        {
            switch (ipsum.Type) {
                case LoremIpsumType.Add:
                    _ipsums.Add(ipsum);

                    break;
                case LoremIpsumType.Edit:
                    var editIndex = _ipsums.IndexOf(_ipsums.Where(X => X.Id == ipsum.Id).Single());

                    _ipsums[editIndex] = ipsum;

                    break;
                case LoremIpsumType.Delete:
                    var deleteIndex = _ipsums.IndexOf(_ipsums.Where(X => X.Id == ipsum.Id).Single());

                    _ipsums.RemoveAt(deleteIndex);

                    break;
                case LoremIpsumType.DeleteAll:
                    _ipsums.Clear();
                    break;
            }

            InvokeAsync(StateHasChanged);
        });

        await _hubConnection.StartAsync();
    }

    private string RowStyleFunc(LoremIpsum arg1, int index)
    {
        return index % 2 == 0 ? "background-color:white" : "background-color:#fffaf0";
    }
}